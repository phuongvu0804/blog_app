{"version":3,"file":"static/js/950.f8690d67.chunk.js","mappings":"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","sources":["components/Divider/index.js","pages/Home/components/RecommendationList/index.js","pages/Home/components/Banner/index.js","pages/Home/components/TrendingList/index.js","pages/Home/index.js"],"sourcesContent":["import React from 'react';\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\n\nimport './DotDivider.scss';\nconst DotDivider = ({ sx, ...props }) => {\n    return (\n        <FiberManualRecordIcon\n            className=\"dot-divider\"\n            sx={{ ...sx }}\n            {...props}\n        />\n    );\n};\n\nexport default DotDivider;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\n\nimport './RecommendationList.scss';\nimport { MAX_WIDTH_DEFAULT_LAYOUT } from '@/constants';\n\nimport { Box, Container } from '@mui/system';\nimport { Grid, IconButton, Typography } from '@mui/material';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder';\n\nimport Image from '@/components/Image';\nimport DotDivider from '@/components/Divider';\n\nconst RecommendationItem = ({ blog }) => {\n    const [onSaved, setOnSaved] = useState(false);\n\n    return (\n        <Grid\n            container\n            columnSpacing={{ xs: 1, sm: 4, md: 4 }}\n            className=\"rcm-item\"\n        >\n            <Grid item xs={8} sm={8} md={8} className=\"rcm-item__left\">\n                <div className=\"rcm-item__author\">\n                    <AccountCircleIcon sx={{ fontSize: '2rem' }} />\n                    <Typography\n                        variant=\"h6\"\n                        component={Link}\n                        to={`/users/${blog.author.id}`}\n                    >\n                        {blog.author.name}\n                    </Typography>\n                </div>\n                <Typography\n                    variant=\"h4\"\n                    component={Link}\n                    to={`/blogs/${blog.id}`}\n                >\n                    {blog.title}\n                </Typography>\n                <p>{blog.content}</p>\n                <Box\n                    className=\"rcm-item__info\"\n                    sx={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'space-between',\n                    }}\n                >\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            fontSize: '1.4rem',\n                            color: 'var(--gray)',\n                        }}\n                        className=\"rcm-item__info-wrapper\"\n                    >\n                        <span className=\"rcm-item__date\">\n                            {moment(blog.createdAt).format('ll')}\n                        </span>\n                        <DotDivider />\n                        <span className=\"rcm-item__like\">\n                            <ThumbUpIcon\n                                sx={{\n                                    fill: 'var(--blue)',\n                                    marginRight: '0.4rem',\n                                }}\n                            />\n                            {blog.likes}\n                        </span>\n                    </Box>\n                    <IconButton\n                        className={`rcm-item__info-btn ${\n                            onSaved ? 'on-saved' : ''\n                        }`}\n                        onClick={() => setOnSaved(!onSaved)}\n                    >\n                        {onSaved ? <BookmarkIcon /> : <BookmarkBorderIcon />}\n                    </IconButton>\n                </Box>\n            </Grid>\n            <Grid item xs={4} sm={4} md={4} className=\"rcm-item__right\">\n                <Link to={`/blogs/${blog.id}`}>\n                    <Image src={blog?.image} />\n                </Link>\n            </Grid>\n        </Grid>\n    );\n};\n\nconst RecommendationList = ({ blogList, recommendationTopics, footerList }) => {\n    return (\n        <Container\n            maxWidth={MAX_WIDTH_DEFAULT_LAYOUT}\n            className=\"rcm-list__container\"\n        >\n            <Grid container spacing={12} className=\"rcm-list__grid-container\">\n                <Grid item xs={12} md={7} className=\"rcm-list__wrapper\">\n                    {blogList.map((blog) => (\n                        <RecommendationItem key={blog.id} blog={blog} />\n                    ))}\n                </Grid>\n                <Grid item xs={12} md={5} className=\"rcm-list__wrapper\">\n                    <div className=\"rcm-topics\">\n                        <Typography\n                            variant=\"h6\"\n                            sx={{ fontSize: '1.6rem', paddingBottom: '1.6rem' }}\n                        >\n                            Discover more of what matters to you\n                        </Typography>\n                        <Box\n                            sx={{ display: 'flex', flexWrap: 'wrap' }}\n                            container\n                            spacing={1}\n                            className=\"rcm-list__topic-list\"\n                        >\n                            {recommendationTopics.map((item, index) => (\n                                <div key={index}>\n                                    <Link className=\"rcm-list__topic-item\">\n                                        {item}\n                                    </Link>\n                                </div>\n                            ))}\n                        </Box>\n                        <Link variant=\"text\" className=\"rcm-list__topic-btn\">\n                            See more topics\n                        </Link>\n                    </div>\n                    <div className=\"footer\">\n                        {footerList.map((item, index) => (\n                            <Link className=\"footer-item\" key={index}>\n                                {item}\n                            </Link>\n                        ))}\n                    </div>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n};\n\nRecommendationList.propTypes = {\n    data: PropTypes.array,\n};\n\nexport default RecommendationList;\n","import React from 'react';\nimport { Container } from '@mui/system';\n\nimport './Banner.scss';\nimport { MAX_WIDTH_DEFAULT_LAYOUT } from '@/constants';\nimport images from '@/assets/images';\n\nimport MainButton from '@/components/MainButton';\nimport Image from '@/components/Image';\nconst Banner = () => {\n    return (\n        <div className=\"banner__wrapper\">\n            <Container\n                className=\"banner__container\"\n                maxWidth={MAX_WIDTH_DEFAULT_LAYOUT}\n            >\n                <div className=\"banner__content\">\n                    <h2>Stay curios.</h2>\n                    <p>\n                        Discover stories, thinking, and expertise from writers\n                        on any topic.\n                    </p>\n                    <MainButton>Start Reading</MainButton>\n                </div>\n                <div className=\"banner__img\">\n                    <Image src={images.bannerHomePage} />\n                </div>\n            </Container>\n        </div>\n    );\n};\n\nexport default Banner;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { Box, Container } from '@mui/system';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\nimport { Grid } from '@mui/material';\nimport PersonIcon from '@mui/icons-material/Person';\n\nimport './TrendingList.scss';\nimport { MAX_WIDTH_DEFAULT_LAYOUT } from '@/constants';\n\nimport DotDivider from '@/components/Divider';\n\nconst TrendingItem = ({ blog, index }) => {\n    return (\n        <Grid item xs={12} sm={6} md={4} className=\"trending-list__item\">\n            <div className=\"trending-item__no\">\n                <span>{index < 10 ? `0${index + 1}` : index + 1}</span>\n            </div>\n            <div className=\"trending-item__wrapper\">\n                <Link\n                    to={`/users/${blog.author.id}`}\n                    className=\"trending-item__author\"\n                >\n                    <PersonIcon className=\"trending-item__author-icon\" />\n                    <span className=\"trending-item__author-name\">\n                        {blog.author.name}\n                    </span>\n                </Link>\n                <Link className=\"trending-item__title\">{blog.title}</Link>\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                    <p className=\"trending-item__date\">\n                        {moment(blog.createdAt).format('ll')}\n                    </p>\n                    <DotDivider />\n                    <p className=\"trending-item__like\">\n                        <ThumbUpIcon\n                            sx={{ fill: '#437aff', marginRight: '0.4rem' }}\n                        />\n                        {blog.likes}\n                    </p>\n                </Box>\n            </div>\n        </Grid>\n    );\n};\n\nconst TrendingList = ({ data }) => {\n    return (\n        <Container\n            maxWidth={MAX_WIDTH_DEFAULT_LAYOUT}\n            className=\"trending-list__container\"\n        >\n            <h2 className=\"sub-title-md\">\n                <TrendingUpIcon />\n                Trending on Medium\n            </h2>\n            <Grid container spacing={2} className=\"trending-list__wrapper\">\n                {data.map((blog, index) => (\n                    <TrendingItem key={blog.id} blog={blog} index={index} />\n                ))}\n            </Grid>\n        </Container>\n    );\n};\n\nTrendingList.propTypes = {\n    data: PropTypes.array,\n};\n\nTrendingItem.propTypes = {\n    blog: PropTypes.object,\n    index: PropTypes.number,\n};\n\nexport default TrendingList;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Box } from '@mui/material';\n\nimport { HEADER_HEIGHT_DEFAULT_LAYOUT } from '@/constants';\nimport './Home.scss';\nimport { initializeBlogs } from '@/reducers/blogReducer';\nimport RecommendationList from './components/RecommendationList';\n\nimport Banner from './components/Banner';\nimport TrendingList from './components/TrendingList';\n\nconst Home = () => {\n    const recommendationTopics = [\n        'Programming',\n        'Data Science',\n        'Technology',\n        'Self Improvement',\n        'Writing',\n        'Relationships',\n        'Machine Learning',\n        'Productivity',\n        'Politics',\n    ];\n\n    const footerList = [\n        'Help',\n        'Status',\n        'Writer',\n        'Blog',\n        'Careers',\n        'Privacy',\n        'Terms',\n        'About',\n        'Text to speech',\n        'Terms',\n    ];\n\n    const dispatch = useDispatch();\n    const blogs = useSelector((state) => state.blogs);\n    const [trendingBlogs, setTrendingBlogs] = useState([]);\n\n    useEffect(() => {\n        dispatch(initializeBlogs());\n    }, []);\n\n    const filterBlogsByLikes = () => {\n        const newBlogs = [...blogs]\n            .sort((a, b) => {\n                if (a.likes > b.likes) {\n                    return -1;\n                } else if (a.likes < b.likes) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            })\n            .slice(0, 6);\n\n        setTrendingBlogs(newBlogs);\n    };\n\n    useEffect(() => {\n        filterBlogsByLikes();\n    }, [blogs]);\n\n    return (\n        <div>\n            <Box sx={{ height: HEADER_HEIGHT_DEFAULT_LAYOUT }} />\n            <Banner />\n            <TrendingList data={trendingBlogs} />\n            <RecommendationList\n                blogList={blogs}\n                recommendationTopics={recommendationTopics}\n                footerList={footerList}\n            />\n        </div>\n    );\n};\n\nexport default Home;\n"],"names":["_ref","sx","props","_objectWithoutProperties","_excluded","_jsx","FiberManualRecordIcon","_objectSpread","className","RecommendationItem","blog","_useState","useState","_useState2","_slicedToArray","onSaved","setOnSaved","_jsxs","Grid","container","columnSpacing","xs","sm","md","children","item","AccountCircleIcon","fontSize","Typography","variant","component","Link","to","concat","author","id","name","title","content","Box","display","alignItems","justifyContent","color","moment","createdAt","format","DotDivider","ThumbUpIcon","fill","marginRight","likes","IconButton","onClick","BookmarkIcon","BookmarkBorderIcon","Image","src","image","_ref2","blogList","recommendationTopics","footerList","Container","maxWidth","MAX_WIDTH_DEFAULT_LAYOUT","spacing","map","paddingBottom","flexWrap","index","MainButton","images","bannerHomePage","TrendingItem","PersonIcon","data","TrendingUpIcon","dispatch","useDispatch","blogs","useSelector","state","trendingBlogs","setTrendingBlogs","useEffect","initializeBlogs","newBlogs","_toConsumableArray","sort","a","b","slice","filterBlogsByLikes","height","HEADER_HEIGHT_DEFAULT_LAYOUT","Banner","TrendingList","RecommendationList"],"sourceRoot":""}