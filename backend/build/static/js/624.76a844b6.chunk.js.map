{"version":3,"file":"static/js/624.76a844b6.chunk.js","mappings":"qQAmHA,UAzGc,WAAO,IAADA,EACVC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,IAAI,IAC/CC,GAAoCC,EAAAA,EAAAA,UAAS,CACzCC,SAAU,GACVC,SAAU,KACZC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAHKM,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAIhCI,GAAwBP,EAAAA,EAAAA,UAAS,CAC7BQ,KAAM,OACNC,QAAS,OACXC,GAAAN,EAAAA,EAAAA,GAAAG,EAAA,GAHKI,EAAID,EAAA,GAAEE,EAAOF,EAAA,IAKpBG,EAAAA,EAAAA,YAAU,WACFlB,EAAMmB,OACNF,EAAQ,CACJJ,KAAM,QACNC,QAASd,EAAMmB,MAAMC,SAASC,KAAKF,OAG/C,GAAG,CAACnB,EAAMmB,QAEV,IAAMG,EAAe,SAACC,GAClBZ,GAAaa,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAId,GAAU,IAAAe,EAAAA,EAAAA,GAAA,GAAGF,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,QAC7D,EAuCA,OACIC,EAAAA,EAAAA,MAAA,QAAMC,UAAU,aAAaC,SAlBf,SAAAC,GAAA,OAAArC,EAAAA,IAAAsC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOb,GAAC,OAAAW,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACzBjB,EAAEkB,kBAlBE/B,EAAWJ,SAASoC,OAAS,EACtBzB,EAAQ,CACXJ,KAAM,QACNC,QAAS,6CAIbJ,EAAWH,SAASmC,OAAS,IACtBzB,EAAQ,CACXJ,KAAM,QACNC,QAAS,6CAYbhB,GACI6C,EAAAA,EAAAA,IACI,CACIrC,SAAUI,EAAWJ,SACrBC,SAAUG,EAAWH,UAEzBX,IAGX,wBAAA0C,EAAAM,OAAA,GAAAR,EAAA,MACJS,MAAA,KAAAC,UAAA,EAGuDC,SAAA,CAC/C/B,EAAKF,UACFkC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACFC,SAAUlC,EAAKH,KACfiB,UAAU,OACVqB,GAAI,CAAEC,SAAU,SAAUC,aAAc,QAASN,SAEhD/B,EAAKF,WAIde,EAAAA,EAAAA,MAACyB,EAAAA,EAAW,CAACxB,UAAU,oBAAmBiB,SAAA,EACtCC,EAAAA,EAAAA,KAACO,EAAAA,EAAU,CAAAR,SAAC,cACZC,EAAAA,EAAAA,KAACQ,EAAAA,EAAK,CACF7B,KAAK,WACLC,MAAOlB,EAAWJ,SAClBmD,SAAUnC,QAGlBO,EAAAA,EAAAA,MAACyB,EAAAA,EAAW,CAACxB,UAAU,oBAAmBiB,SAAA,EACtCC,EAAAA,EAAAA,KAACO,EAAAA,EAAU,CAAAR,SAAC,cACZC,EAAAA,EAAAA,KAACQ,EAAAA,EAAK,CACF7B,KAAK,WACLd,KAAK,WACLe,MAAOlB,EAAWH,SAClBkD,SAAUnC,QAIlB0B,EAAAA,EAAAA,KAACU,EAAAA,EAAa,CACVC,QAAS3D,EAAM2D,QACf9C,KAAK,SACLiB,UAAU,kBACV8B,QAAQ,YAAWb,SACtB,aAKb,C","sources":["pages/authPages/Login/index.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\n\nimport '../authPages.scss';\nimport { actLogin } from '@/reducers/userReducer';\n\nimport { Alert, FormControl, Input, InputLabel } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n\nconst Login = () => {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const login = useSelector((state) => state.user);\n    const [formInputs, setFormInputs] = useState({\n        username: '',\n        password: '',\n    });\n    const [noti, setNoti] = useState({\n        type: 'info',\n        content: null,\n    });\n\n    useEffect(() => {\n        if (login.error) {\n            setNoti({\n                type: 'error',\n                content: login.error.response.data.error,\n            });\n        }\n    }, [login.error]);\n\n    const handleChange = (e) => {\n        setFormInputs({ ...formInputs, [e.target.name]: e.target.value });\n    };\n\n    const handleValidate = () => {\n        let isValid = false;\n\n        if (formInputs.username.length < 3) {\n            return setNoti({\n                type: 'error',\n                content: 'Username must be at least 3 characters',\n            });\n        }\n\n        if (formInputs.password.length < 6) {\n            return setNoti({\n                type: 'error',\n                content: 'Password must be at least 6 characters',\n            });\n        }\n\n        return (isValid = true);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const isValid = handleValidate();\n\n        if (isValid) {\n            dispatch(\n                actLogin(\n                    {\n                        username: formInputs.username,\n                        password: formInputs.password,\n                    },\n                    navigate,\n                ),\n            );\n        }\n    };\n\n    return (\n        <form className=\"auth__form\" onSubmit={handleSubmit}>\n            {noti.content && (\n                <Alert\n                    severity={noti.type}\n                    className=\"noti\"\n                    sx={{ fontSize: '1.6rem', marginBottom: '3rem' }}\n                >\n                    {noti.content}\n                </Alert>\n            )}\n\n            <FormControl className=\"auth__input-group\">\n                <InputLabel>Username</InputLabel>\n                <Input\n                    name=\"username\"\n                    value={formInputs.username}\n                    onChange={handleChange}\n                />\n            </FormControl>\n            <FormControl className=\"auth__input-group\">\n                <InputLabel>Password</InputLabel>\n                <Input\n                    name=\"password\"\n                    type=\"password\"\n                    value={formInputs.password}\n                    onChange={handleChange}\n                />\n            </FormControl>\n\n            <LoadingButton\n                loading={login.loading}\n                type=\"submit\"\n                className=\"auth__input-btn\"\n                variant=\"contained\"\n            >\n                Submit\n            </LoadingButton>\n        </form>\n    );\n};\n\nexport default Login;\n"],"names":["_ref","navigate","useNavigate","dispatch","useDispatch","login","useSelector","state","user","_useState","useState","username","password","_useState2","_slicedToArray","formInputs","setFormInputs","_useState3","type","content","_useState4","noti","setNoti","useEffect","error","response","data","handleChange","e","_objectSpread","_defineProperty","target","name","value","_jsxs","className","onSubmit","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","preventDefault","length","actLogin","stop","apply","arguments","children","_jsx","Alert","severity","sx","fontSize","marginBottom","FormControl","InputLabel","Input","onChange","LoadingButton","loading","variant"],"sourceRoot":""}