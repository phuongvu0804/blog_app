{"version":3,"file":"static/js/39.cf3ea21f.chunk.js","mappings":"mQA8EA,UA/DqB,WACjB,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAOC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,IAAI,IACxCG,GAAWC,EAAAA,EAAAA,MACjBC,GAAgCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,IAE1BG,EAAAA,EAAAA,YAAU,WAAO,IAADC,EACNC,EAAa,IAAIC,gBAevB,OAbmB,YAAAF,EAAAA,IAAAG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAESC,EAAAA,EAAYC,YAAY/B,GAAI,KAAD,EAA5CyB,EAAQE,EAAAK,KACdpB,EAAYa,GAAUE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEtBtB,GAAS6B,EAAAA,EAAAA,IAAOP,EAAAM,KAAS,QAEP,OAFON,EAAAC,KAAA,GAEzBZ,GAAW,GAAOW,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAZ,EAAA,yBAEzBa,MAAA,KAAAC,UAAA,CAEDC,GAEO,WACHpB,EAAWqB,OACf,CACJ,GAAG,IAQH,OAAIzB,GACO0B,EAAAA,EAAAA,KAACC,EAAAA,EAAoB,IAG3B/B,GAcDgC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC3B3C,EAAK4C,UACFL,EAAAA,EAAAA,KAACM,EAAAA,EAAK,CAACC,SAAU9C,EAAK+C,KAAML,UAAU,OAAMC,SACvC3C,EAAK4C,UA1BXnC,EAASuC,MAAMC,KAAI,SAACC,GAAI,OAC3BX,EAAAA,EAAAA,KAACY,EAAAA,EAAQ,CAAeC,KAAMF,GAAfA,EAAKpD,GAAkB,QAUtCyC,EAAAA,EAAAA,KAACc,EAAAA,EAAS,CACNC,SAAUC,EAAAA,GACVb,UAAU,kBAAiBC,UAE3BJ,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CAACC,QAAQ,KAAKC,GAAI,CAAEC,UAAW,GAAIhB,SAAC,sCAiB/D,C","sources":["pages/DetailedUser/index.js"],"sourcesContent":["import { Container } from '@mui/system';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport './DetailedUser.scss';\nimport userService from '@/services/user.js';\nimport { setNoti } from '@/reducers/notiReducer';\n\nimport BlogItem from './components/BlogItem';\nimport DetailedUserSkeleton from './components/DetailedUserSkeleton';\n\nimport { Alert, Typography } from '@mui/material';\nimport { MAX_WIDTH_DEFAULT_LAYOUT } from '@/constants/appSettings';\n\nconst DetailedUser = () => {\n    const { id } = useParams();\n    const noti = useSelector((state) => state.noti);\n    const dispatch = useDispatch();\n    const [userData, setUserData] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const controller = new AbortController();\n\n        const fetchUserData = async () => {\n            try {\n                const response = await userService.getUserById(id);\n                setUserData(response);\n            } catch (error) {\n                dispatch(setNoti(error));\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchUserData();\n\n        return () => {\n            controller.abort();\n        };\n    }, []);\n\n    const renderBlogs = () => {\n        return userData.blogs.map((blog) => (\n            <BlogItem key={blog.id} data={blog} />\n        ));\n    };\n\n    if (loading) {\n        return <DetailedUserSkeleton />;\n    }\n\n    if (!userData) {\n        return (\n            <Container\n                maxWidth={MAX_WIDTH_DEFAULT_LAYOUT}\n                className=\"user__container\"\n            >\n                <Typography variant=\"h4\" sx={{ marginTop: 2 }}>\n                    There is no data about this user\n                </Typography>\n            </Container>\n        );\n    }\n\n    return (\n        <div className=\"user__blog-list\">\n            {noti.content && (\n                <Alert severity={noti.type} className=\"noti\">\n                    {noti.content}\n                </Alert>\n            )}\n            {renderBlogs()}\n        </div>\n    );\n};\n\nexport default DetailedUser;\n"],"names":["id","useParams","noti","useSelector","state","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","userData","setUserData","_useState3","_useState4","loading","setLoading","useEffect","_ref","controller","AbortController","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","userService","getUserById","sent","t0","setNoti","finish","stop","apply","arguments","fetchUserData","abort","_jsx","DetailedUserSkeleton","_jsxs","className","children","content","Alert","severity","type","blogs","map","blog","BlogItem","data","Container","maxWidth","MAX_WIDTH_DEFAULT_LAYOUT","Typography","variant","sx","marginTop"],"sourceRoot":""}