{"version":3,"file":"static/js/569.16445bc1.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/internal/svg-icons/Person.js","../node_modules/@mui/material/Avatar/avatarClasses.js","../node_modules/@mui/material/Avatar/Avatar.js","pages/authPages/SignUp/index.js","pages/authPages/components/InputGroup/index.js","validators/authValidator.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatar', slot);\n}\nconst avatarClasses = generateUtilityClasses('MuiAvatar', ['root', 'colorDefault', 'circular', 'rounded', 'square', 'img', 'fallback']);\nexport default avatarClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"alt\", \"children\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Person from '../internal/svg-icons/Person';\nimport { getAvatarUtilityClass } from './avatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none'\n}, ownerState.variant === 'rounded' && {\n  borderRadius: (theme.vars || theme).shape.borderRadius\n}, ownerState.variant === 'square' && {\n  borderRadius: 0\n}, ownerState.colorDefault && _extends({\n  color: (theme.vars || theme).palette.background.default\n}, theme.vars ? {\n  backgroundColor: theme.vars.palette.Avatar.defaultBg\n} : {\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n})));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image. The property isn't supported by IE11.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('loaded');\n    };\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('error');\n    };\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n  const {\n      alt,\n      children: childrenProp,\n      className,\n      component = 'div',\n      imgProps,\n      sizes,\n      src,\n      srcSet,\n      variant = 'circular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  let children = null;\n\n  // Use a hook instead of onError on the img element to support server-side rendering.\n  const loaded = useLoaded(_extends({}, imgProps, {\n    src,\n    srcSet\n  }));\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n  const ownerState = _extends({}, props, {\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(AvatarImg, _extends({\n      alt: alt,\n      srcSet: srcSet,\n      src: src,\n      sizes: sizes,\n      ownerState: ownerState,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      ownerState: ownerState,\n      className: classes.fallback\n    });\n  }\n  return /*#__PURE__*/_jsx(AvatarRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useFormik } from 'formik';\n\nimport authService from '@/services/auth';\n\nimport { LoadingButton } from '@mui/lab';\nimport { Alert, Avatar, Button, FormControl } from '@mui/material';\n\nimport '../authPages.scss';\nimport { actLogin } from '@/reducers/userReducer';\nimport { signUpSchema } from '@/validators/authValidator';\nimport InputGroup from '../components/InputGroup';\n\nconst SignUp = () => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const { loading } = useSelector((state) => state.user);\n    const [imagePreview, setImagePreview] = useState(null);\n    const [noti, setNoti] = useState({\n        type: 'info',\n        content: null,\n    });\n\n    const handleUploadAvatar = (e) => {\n        setFieldValue('image', e.target.files[0]);\n        setImagePreview(URL.createObjectURL(e.target.files[0]));\n    };\n\n    const initialValues = {\n        name: '',\n        username: '',\n        password: '',\n        description: '',\n        image: '',\n    };\n\n    const {\n        handleSubmit,\n        values,\n        errors,\n        touched,\n        setFieldValue,\n        handleChange,\n        handleBlur,\n    } = useFormik({\n        initialValues,\n        validationSchema: signUpSchema,\n        onSubmit: async () => {\n            let formData = new FormData();\n            for (const key in initialValues) {\n                if (key === 'image') {\n                    formData.append('image', values.image);\n                } else {\n                    formData.append(key, values[key]);\n                }\n            }\n\n            try {\n                await authService.signUp(formData);\n\n                setNoti({\n                    type: 'success',\n                    content: 'You have signed up successfully',\n                });\n\n                setTimeout(() => {\n                    dispatch(\n                        actLogin(\n                            {\n                                username: values.username,\n                                password: values.password,\n                            },\n                            navigate,\n                        ),\n                    );\n                }, 1000);\n            } catch (err) {\n                setNoti({\n                    type: 'error',\n                    content: err.response.data.error,\n                });\n            }\n        },\n    });\n\n    const renderAlert = () => {\n        if (noti.content) {\n            return (\n                <Alert\n                    severity={noti.type}\n                    className=\"noti\"\n                    sx={{ fontSize: '1.6rem', marginBottom: '3rem' }}\n                >\n                    {noti.content}\n                </Alert>\n            );\n        }\n    };\n\n    const renderInputs = () => {\n        const inputList = ['username', 'name', 'password', 'description'];\n\n        return inputList.map((input, item) => (\n            <InputGroup\n                key={item}\n                inputName={input}\n                values={values[input]}\n                errors={errors[input]}\n                touched={touched[input]}\n                handleBlur={handleBlur}\n                handleChange={handleChange}\n            />\n        ));\n    };\n\n    return (\n        <form\n            method=\"POST\"\n            className=\"auth__form\"\n            onSubmit={handleSubmit}\n            encType=\"multipart/form-data\"\n        >\n            {renderAlert()}\n            {renderInputs()}\n\n            <FormControl className=\"auth__input-group\">\n                <Button\n                    variant=\"text\"\n                    component=\"label\"\n                    sx={{\n                        color: 'var(--black)',\n                        textDecoration: 'underline',\n                        textTransform: 'none',\n                    }}\n                >\n                    Upload avatar\n                    <input\n                        hidden\n                        accept=\"image/*\"\n                        type=\"file\"\n                        name=\"image\"\n                        onChange={handleUploadAvatar}\n                    />\n                </Button>\n                <Avatar\n                    alt=\"Remy Sharp\"\n                    src={imagePreview}\n                    sx={{ margin: '1.2rem auto 0' }}\n                />\n            </FormControl>\n\n            <LoadingButton\n                type=\"submit\"\n                className=\"auth__input-btn\"\n                variant=\"contained\"\n                loading={loading}\n            >\n                Submit\n            </LoadingButton>\n        </form>\n    );\n};\n\nexport default SignUp;\n","import { FormControl, FormHelperText, TextField } from '@mui/material';\nimport React, { memo } from 'react';\n\nconst InputGroup = ({\n    inputName,\n    value,\n    error,\n    touched,\n    handleBlur,\n    handleChange,\n}) => {\n    return (\n        <FormControl className=\"auth__input-group\">\n            <TextField\n                label={\n                    inputName === 'description'\n                        ? 'Bio'\n                        : inputName.charAt(0).toUpperCase() + inputName.slice(1)\n                }\n                variant=\"standard\"\n                name={inputName}\n                onBlur={handleBlur}\n                touched={touched?.toString()}\n                error={error && touched}\n                type={inputName === 'password' ? 'password' : 'text'}\n                value={value}\n                onChange={handleChange}\n            />\n            {error && touched && (\n                <FormHelperText className=\"auth__input-text\" error>\n                    {error}\n                </FormHelperText>\n            )}\n        </FormControl>\n    );\n};\n\nexport default memo(InputGroup);\n","import * as yup from 'yup';\n\nconst signUpSchema = yup.object().shape({\n    name: yup\n        .string()\n        .min(3)\n        .required('Full name must be at least 3 characters'),\n    username: yup\n        .string()\n        .min(3)\n        .required('Username must be at least 3 characters'),\n    password: yup\n        .string()\n        .min(6)\n        .required('Password must be at least 6 characters'),\n    description: yup\n        .string()\n        .min(10)\n        .max(200)\n        .required('Description must be at most 200 characters'),\n    image: yup\n        .mixed()\n        .required('Image is required')\n        .test('fileSize', 'Image is too large. Max size is 2MB.', (value) => {\n            if (value) {\n                return value.size <= 2 * 1024 * 1024;\n            }\n            return true;\n        })\n        .test('fileType', 'Unsupported file format', (value) => {\n            if (value) {\n                return ['image/jpg', 'image/jpeg', 'image/png'].includes(\n                    value.type,\n                );\n            }\n            return true;\n        }),\n});\n\nconst logInSchema = yup.object().shape({\n    username: yup\n        .string()\n        .min(3)\n        .required('Username must be at least 3 characters'),\n    password: yup\n        .string()\n        .min(6)\n        .required('Password must be at least 6 characters'),\n});\n\nexport { signUpSchema, logInSchema };\n"],"names":["createSvgIcon","_jsx","d","getAvatarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","AvatarRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","colorDefault","_ref","theme","_extends","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","vars","shape","color","palette","background","default","backgroundColor","Avatar","defaultBg","mode","grey","AvatarImg","img","textAlign","objectFit","textIndent","AvatarFallback","Person","fallback","React","inProps","ref","useThemeProps","alt","childrenProp","children","className","_props$component","component","imgProps","sizes","src","srcSet","_props$variant","other","_objectWithoutPropertiesLoose","loaded","_ref2","crossOrigin","referrerPolicy","_React$useState","_React$useState2","_slicedToArray","setLoaded","active","image","Image","onload","onerror","srcset","useLoaded","hasImg","hasImgNotFailing","classes","slots","composeClasses","useUtilityClasses","as","clsx","_onSubmit","dispatch","useDispatch","navigate","useNavigate","loading","useSelector","state","user","_useState","useState","_useState2","imagePreview","setImagePreview","_useState3","type","content","_useState4","noti","setNoti","initialValues","username","password","description","_useFormik","useFormik","validationSchema","signUpSchema","onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formData","key","wrap","_context","prev","next","FormData","append","values","authService","signUp","setTimeout","actLogin","t0","response","data","error","stop","apply","arguments","handleSubmit","errors","touched","setFieldValue","handleChange","handleBlur","_jsxs","method","encType","Alert","severity","sx","marginBottom","renderAlert","map","input","item","InputGroup","inputName","FormControl","Button","textDecoration","textTransform","hidden","accept","onChange","e","target","files","URL","createObjectURL","margin","LoadingButton","value","TextField","label","charAt","toUpperCase","slice","onBlur","toString","FormHelperText","memo","yup","min","required","max","test","size","includes","logInSchema"],"sourceRoot":""}